
/single           - route to single handler
/path/*           - all routes under /path/*
/path/subpath/*   - more specific than /path/* so matches
/path/*.txt       - more specific than /path/* so matches
/path/{name}/*    - With jersey style capturing, more specific 
                    than /path/* but less specific than /path/subpath/*
/path/{name}/woot - More specific than /path/{name}/*

==== Branches containing nodes

   root -- single
        `- path ---- subpath -- *
                `--- *.txt
                `--- {name} -- woot
                            `- * 


Search Algorithm:
  - Split path on /
  - Check specific path (use hash table)
  - Check file patterns (order not specified)
  - Check captured 

Insert Algorithm
  - Split path on /
  - Foreach component of the path
     - If component exists insert into existing
     - If component does not exist, insert new


==== Nodes that link to each other

   /single -- /path -- null
     `-- Handler  `-- subpath -- *.txt -- {name} -- null
                       |           |        `-- woot -- Handler
                       |           `-- Handler   `-- Handler
                       `-- Handler

 Search algorithm
    - Split path on /
    - Try first node, if match follow match link
    - If not match follow not match link

 Insert algorithm
    - Split path on /
    - Try first node, if match insert into node
    - If not match insert into not match link

 Advantages
    - Nodes can be optimised e.g LiteralNode is a hierachical hash table
 Problems
    - Insert/lookup algorithm is spread over many node types

